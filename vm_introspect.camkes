/*
 * Copyright 2020, Data61, CSIRO (ABN 41 687 119 230)
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

#include <configurations/vm.h>

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <vm-connectors.camkes>;
import <devices.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <FileServerInterface.camkes>;
import <FileServer/FileServer.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;

/* component Platam { */
/*     control; */
/*     consumes Ready ready; */
/*     emits Done done; */
/*     dataport Buf(4096) am_dp; */

/*     emits Ready ms_ready; */
/*     consumes Done ms_done; */
/*     dataport Buf(4096) ms_dp; */
/* } */

component server_am {
    /* control; */
    dataport Buf(4096) client_dp;
    dataport Buf(4096) introspect_dp;
    dataport Buf(4096) am_dp;
}
component client_am {
    /* control; */
    dataport Buf(4096) server_dp;
}

component introspect_memdev {
    control;
    //guest memory connection
    dataport Buf memdev;

    dataport Buf(4096) server_dp;

    consumes Ready ready;
    emits Done done;
    /* dataport Buf(4096) ms_dp; */
}

component VM {
    VM_INIT_DEF()
    
    //guest memory region
    dataport Buf memdev;

    dataport Buf(4096) am_dp;
    //communication signals
    emits Ready ready;
    consumes Done done;
}

assembly {
    composition {
        VM_GENERAL_COMPOSITION_DEF()
        VM_COMPOSITION_DEF(0)
        connection seL4VMDTBPassthrough vm_dtb(from vm0.dtb_self, to vm0.dtb);

        component server_am server;
        component client_am client;
        component introspect_memdev md;

        connection seL4SharedDataWithCaps am_dp_conn(from server.am_dp, to vm0.am_dp);

        connection seL4SharedDataWithCaps client_to_server(from client.server_dp, to server.client_dp);
        connection seL4SharedDataWithCaps server_to_introspect(from server.introspect_dp, to md.server_dp);

        connection seL4SharedDataWithCaps vm_memdev(from md.memdev, to vm0.memdev);
        connection seL4Notification event_conn_0(from vm0.ready, to md.ready);
        connection seL4GlobalAsynch event_conn_1(from md.done, to vm0.done);


        /* connection seL4Notification event_conn_2(from platam.ms_ready, to md.ready); */
        /* connection seL4Notification event_conn_3(from md.done, to platam.ms_done); */
    }
    configuration {
        VM_GENERAL_CONFIGURATION_DEF()
        VM_CONFIGURATION_DEF(0)

        vm0.num_extra_frame_caps = 0;
        vm0.extra_frame_map_address = 0;
        vm0.cnode_size_bits = 23;
        vm0.simple_untyped24_pool = 12;

        vm0.am_dp_id = 0;
        vm0.am_dp_size = 4096;

        md.memdev_hardware_cached = false;
        vm0.memdev_hardware_cached = false;
    }
}
